package com.fintech.erp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaganszemelyekAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaganszemelyekAllPropertiesEquals(Maganszemelyek expected, Maganszemelyek actual) {
        assertMaganszemelyekAutoGeneratedPropertiesEquals(expected, actual);
        assertMaganszemelyekAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaganszemelyekAllUpdatablePropertiesEquals(Maganszemelyek expected, Maganszemelyek actual) {
        assertMaganszemelyekUpdatableFieldsEquals(expected, actual);
        assertMaganszemelyekUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaganszemelyekAutoGeneratedPropertiesEquals(Maganszemelyek expected, Maganszemelyek actual) {
        assertThat(actual)
            .as("Verify Maganszemelyek auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaganszemelyekUpdatableFieldsEquals(Maganszemelyek expected, Maganszemelyek actual) {
        assertThat(actual)
            .as("Verify Maganszemelyek relevant properties")
            .satisfies(a -> assertThat(a.getMaganszemelyNeve()).as("check maganszemelyNeve").isEqualTo(expected.getMaganszemelyNeve()))
            .satisfies(a ->
                assertThat(a.getSzemelyiIgazolvanySzama())
                    .as("check szemelyiIgazolvanySzama")
                    .isEqualTo(expected.getSzemelyiIgazolvanySzama())
            )
            .satisfies(a -> assertThat(a.getAdoAzonositoJel()).as("check adoAzonositoJel").isEqualTo(expected.getAdoAzonositoJel()))
            .satisfies(a -> assertThat(a.getTbAzonosito()).as("check tbAzonosito").isEqualTo(expected.getTbAzonosito()))
            .satisfies(a -> assertThat(a.getBankszamlaszam()).as("check bankszamlaszam").isEqualTo(expected.getBankszamlaszam()))
            .satisfies(a -> assertThat(a.getTelefonszam()).as("check telefonszam").isEqualTo(expected.getTelefonszam()))
            .satisfies(a -> assertThat(a.getEmailcim()).as("check emailcim").isEqualTo(expected.getEmailcim()))
            .satisfies(a -> assertThat(a.getStatusz()).as("check statusz").isEqualTo(expected.getStatusz()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaganszemelyekUpdatableRelationshipsEquals(Maganszemelyek expected, Maganszemelyek actual) {
        // empty method
    }
}
