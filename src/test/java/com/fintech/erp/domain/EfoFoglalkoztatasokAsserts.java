package com.fintech.erp.domain;

import static com.fintech.erp.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class EfoFoglalkoztatasokAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEfoFoglalkoztatasokAllPropertiesEquals(EfoFoglalkoztatasok expected, EfoFoglalkoztatasok actual) {
        assertEfoFoglalkoztatasokAutoGeneratedPropertiesEquals(expected, actual);
        assertEfoFoglalkoztatasokAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEfoFoglalkoztatasokAllUpdatablePropertiesEquals(EfoFoglalkoztatasok expected, EfoFoglalkoztatasok actual) {
        assertEfoFoglalkoztatasokUpdatableFieldsEquals(expected, actual);
        assertEfoFoglalkoztatasokUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEfoFoglalkoztatasokAutoGeneratedPropertiesEquals(EfoFoglalkoztatasok expected, EfoFoglalkoztatasok actual) {
        assertThat(actual)
            .as("Verify EfoFoglalkoztatasok auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEfoFoglalkoztatasokUpdatableFieldsEquals(EfoFoglalkoztatasok expected, EfoFoglalkoztatasok actual) {
        assertThat(actual)
            .as("Verify EfoFoglalkoztatasok relevant properties")
            .satisfies(a -> assertThat(a.getDatum()).as("check datum").isEqualTo(expected.getDatum()))
            .satisfies(a ->
                assertThat(a.getOsszeg()).as("check osszeg").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getOsszeg())
            )
            .satisfies(a ->
                assertThat(a.getGeneraltEfoSzerzodes()).as("check generaltEfoSzerzodes").isEqualTo(expected.getGeneraltEfoSzerzodes())
            )
            .satisfies(a -> assertThat(a.getAlairtEfoSzerzodes()).as("check alairtEfoSzerzodes").isEqualTo(expected.getAlairtEfoSzerzodes())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEfoFoglalkoztatasokUpdatableRelationshipsEquals(EfoFoglalkoztatasok expected, EfoFoglalkoztatasok actual) {
        assertThat(actual)
            .as("Verify EfoFoglalkoztatasok relationships")
            .satisfies(a -> assertThat(a.getMunkavallalo()).as("check munkavallalo").isEqualTo(expected.getMunkavallalo()));
    }
}
