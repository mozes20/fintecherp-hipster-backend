package com.fintech.erp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SzerzodesesJogviszonyokAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSzerzodesesJogviszonyokAllPropertiesEquals(SzerzodesesJogviszonyok expected, SzerzodesesJogviszonyok actual) {
        assertSzerzodesesJogviszonyokAutoGeneratedPropertiesEquals(expected, actual);
        assertSzerzodesesJogviszonyokAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSzerzodesesJogviszonyokAllUpdatablePropertiesEquals(
        SzerzodesesJogviszonyok expected,
        SzerzodesesJogviszonyok actual
    ) {
        assertSzerzodesesJogviszonyokUpdatableFieldsEquals(expected, actual);
        assertSzerzodesesJogviszonyokUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSzerzodesesJogviszonyokAutoGeneratedPropertiesEquals(
        SzerzodesesJogviszonyok expected,
        SzerzodesesJogviszonyok actual
    ) {
        assertThat(actual)
            .as("Verify SzerzodesesJogviszonyok auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSzerzodesesJogviszonyokUpdatableFieldsEquals(
        SzerzodesesJogviszonyok expected,
        SzerzodesesJogviszonyok actual
    ) {
        assertThat(actual)
            .as("Verify SzerzodesesJogviszonyok relevant properties")
            .satisfies(a -> assertThat(a.getSzerzodesAzonosito()).as("check szerzodesAzonosito").isEqualTo(expected.getSzerzodesAzonosito())
            )
            .satisfies(a -> assertThat(a.getJogviszonyKezdete()).as("check jogviszonyKezdete").isEqualTo(expected.getJogviszonyKezdete()))
            .satisfies(a -> assertThat(a.getJogviszonyLejarata()).as("check jogviszonyLejarata").isEqualTo(expected.getJogviszonyLejarata())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSzerzodesesJogviszonyokUpdatableRelationshipsEquals(
        SzerzodesesJogviszonyok expected,
        SzerzodesesJogviszonyok actual
    ) {
        assertThat(actual)
            .as("Verify SzerzodesesJogviszonyok relationships")
            .satisfies(a -> assertThat(a.getMegrendeloCeg()).as("check megrendeloCeg").isEqualTo(expected.getMegrendeloCeg()))
            .satisfies(a -> assertThat(a.getVallalkozoCeg()).as("check vallalkozoCeg").isEqualTo(expected.getVallalkozoCeg()));
    }
}
