package com.fintech.erp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PartnerCegMunkavallalokAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartnerCegMunkavallalokAllPropertiesEquals(PartnerCegMunkavallalok expected, PartnerCegMunkavallalok actual) {
        assertPartnerCegMunkavallalokAutoGeneratedPropertiesEquals(expected, actual);
        assertPartnerCegMunkavallalokAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartnerCegMunkavallalokAllUpdatablePropertiesEquals(
        PartnerCegMunkavallalok expected,
        PartnerCegMunkavallalok actual
    ) {
        assertPartnerCegMunkavallalokUpdatableFieldsEquals(expected, actual);
        assertPartnerCegMunkavallalokUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartnerCegMunkavallalokAutoGeneratedPropertiesEquals(
        PartnerCegMunkavallalok expected,
        PartnerCegMunkavallalok actual
    ) {
        assertThat(actual)
            .as("Verify PartnerCegMunkavallalok auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartnerCegMunkavallalokUpdatableFieldsEquals(
        PartnerCegMunkavallalok expected,
        PartnerCegMunkavallalok actual
    ) {
        assertThat(actual)
            .as("Verify PartnerCegMunkavallalok relevant properties")
            .satisfies(a -> assertThat(a.getStatusz()).as("check statusz").isEqualTo(expected.getStatusz()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartnerCegMunkavallalokUpdatableRelationshipsEquals(
        PartnerCegMunkavallalok expected,
        PartnerCegMunkavallalok actual
    ) {
        assertThat(actual)
            .as("Verify PartnerCegMunkavallalok relationships")
            .satisfies(a -> assertThat(a.getPartnerCeg()).as("check partnerCeg").isEqualTo(expected.getPartnerCeg()))
            .satisfies(a -> assertThat(a.getMaganszemely()).as("check maganszemely").isEqualTo(expected.getMaganszemely()));
    }
}
