package com.fintech.erp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MunkavallalokAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMunkavallalokAllPropertiesEquals(Munkavallalok expected, Munkavallalok actual) {
        assertMunkavallalokAutoGeneratedPropertiesEquals(expected, actual);
        assertMunkavallalokAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMunkavallalokAllUpdatablePropertiesEquals(Munkavallalok expected, Munkavallalok actual) {
        assertMunkavallalokUpdatableFieldsEquals(expected, actual);
        assertMunkavallalokUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMunkavallalokAutoGeneratedPropertiesEquals(Munkavallalok expected, Munkavallalok actual) {
        assertThat(actual)
            .as("Verify Munkavallalok auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMunkavallalokUpdatableFieldsEquals(Munkavallalok expected, Munkavallalok actual) {
        assertThat(actual)
            .as("Verify Munkavallalok relevant properties")
            .satisfies(a ->
                assertThat(a.getFoglalkoztatasTipusa()).as("check foglalkoztatasTipusa").isEqualTo(expected.getFoglalkoztatasTipusa())
            )
            .satisfies(a ->
                assertThat(a.getFoglalkoztatasKezdete()).as("check foglalkoztatasKezdete").isEqualTo(expected.getFoglalkoztatasKezdete())
            )
            .satisfies(a -> assertThat(a.getFoglalkoztatasVege()).as("check foglalkoztatasVege").isEqualTo(expected.getFoglalkoztatasVege())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMunkavallalokUpdatableRelationshipsEquals(Munkavallalok expected, Munkavallalok actual) {
        assertThat(actual)
            .as("Verify Munkavallalok relationships")
            .satisfies(a -> assertThat(a.getSajatCeg()).as("check sajatCeg").isEqualTo(expected.getSajatCeg()))
            .satisfies(a -> assertThat(a.getMaganszemely()).as("check maganszemely").isEqualTo(expected.getMaganszemely()));
    }
}
