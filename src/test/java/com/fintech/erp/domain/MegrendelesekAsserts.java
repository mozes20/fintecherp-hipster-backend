package com.fintech.erp.domain;

import static com.fintech.erp.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class MegrendelesekAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMegrendelesekAllPropertiesEquals(Megrendelesek expected, Megrendelesek actual) {
        assertMegrendelesekAutoGeneratedPropertiesEquals(expected, actual);
        assertMegrendelesekAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMegrendelesekAllUpdatablePropertiesEquals(Megrendelesek expected, Megrendelesek actual) {
        assertMegrendelesekUpdatableFieldsEquals(expected, actual);
        assertMegrendelesekUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMegrendelesekAutoGeneratedPropertiesEquals(Megrendelesek expected, Megrendelesek actual) {
        assertThat(actual)
            .as("Verify Megrendelesek auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMegrendelesekUpdatableFieldsEquals(Megrendelesek expected, Megrendelesek actual) {
        assertThat(actual)
            .as("Verify Megrendelesek relevant properties")
            .satisfies(a -> assertThat(a.getMegrendelesTipusa()).as("check megrendelesTipusa").isEqualTo(expected.getMegrendelesTipusa()))
            .satisfies(a ->
                assertThat(a.getFeladatRovidLeirasa()).as("check feladatRovidLeirasa").isEqualTo(expected.getFeladatRovidLeirasa())
            )
            .satisfies(a ->
                assertThat(a.getFeladatReszletesLeirasa())
                    .as("check feladatReszletesLeirasa")
                    .isEqualTo(expected.getFeladatReszletesLeirasa())
            )
            .satisfies(a -> assertThat(a.getMegrendelesKezdete()).as("check megrendelesKezdete").isEqualTo(expected.getMegrendelesKezdete())
            )
            .satisfies(a -> assertThat(a.getMegrendelesVege()).as("check megrendelesVege").isEqualTo(expected.getMegrendelesVege()))
            .satisfies(a ->
                assertThat(a.getResztvevoKollagaTipusa()).as("check resztvevoKollagaTipusa").isEqualTo(expected.getResztvevoKollagaTipusa())
            )
            .satisfies(a -> assertThat(a.getDevizanem()).as("check devizanem").isEqualTo(expected.getDevizanem()))
            .satisfies(a -> assertThat(a.getDijazasTipusa()).as("check dijazasTipusa").isEqualTo(expected.getDijazasTipusa()))
            .satisfies(a ->
                assertThat(a.getDijOsszege())
                    .as("check dijOsszege")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getDijOsszege())
            )
            .satisfies(a ->
                assertThat(a.getMegrendelesDokumentumGeneralta())
                    .as("check megrendelesDokumentumGeneralta")
                    .isEqualTo(expected.getMegrendelesDokumentumGeneralta())
            )
            .satisfies(a ->
                assertThat(a.getUgyfelMegrendelesId()).as("check ugyfelMegrendelesId").isEqualTo(expected.getUgyfelMegrendelesId())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMegrendelesekUpdatableRelationshipsEquals(Megrendelesek expected, Megrendelesek actual) {
        assertThat(actual)
            .as("Verify Megrendelesek relationships")
            .satisfies(a ->
                assertThat(a.getSzerzodesesJogviszony()).as("check szerzodesesJogviszony").isEqualTo(expected.getSzerzodesesJogviszony())
            )
            .satisfies(a -> assertThat(a.getMaganszemely()).as("check maganszemely").isEqualTo(expected.getMaganszemely()));
    }
}
